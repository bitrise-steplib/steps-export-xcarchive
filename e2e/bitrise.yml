format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # secrets
  - BITRISE_KEYCHAIN_PATH: $BITRISE_KEYCHAIN_PATH
  - BITRISE_KEYCHAIN_PASSWORD: $BITRISE_KEYCHAIN_PASSWORD
  - BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
  - BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
  - BITFALL_APPLE_IOS_CERTIFICATE_NOPASSPHRASE_URL: $BITFALL_APPLE_IOS_CERTIFICATE_NOPASSPHRASE_URL
  - BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST: $BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST
  - BITFALL_APPSTORECONNECT_API_KEY_URL: $BITFALL_APPSTORECONNECT_API_KEY_URL
  - BITFALL_APPSTORECONNECT_API_KEY_ID: $BITFALL_APPSTORECONNECT_API_KEY_ID
  - BITFALL_APPSTORECONNECT_API_KEY_ISSUER_ID: $BITFALL_APPSTORECONNECT_API_KEY_ISSUER_ID
  - SAMPLE_ARTIFACTS_URL: https://github.com/bitrise-io/sample-artifacts.git
  - SAMPLE_ARTIFACTS_BRANCH: master
  - TEAM_ID: 72SA8V3WYL
  - CUSTOM_PLIST: |-
      <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
          <dict>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>export</string>
            <key>method</key>
            <string>development</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.bitrise.code-sign-test</key>
              <string>BitriseBot-Wildcard</string>
              <key>com.bitrise.code-sign-test.share-extension</key>
              <string>BitriseBot-Wildcard</string>
              <key>com.bitrise.code-sign-test.watchkitapp</key>
              <string>BitriseBot-Wildcard</string>
              <key>com.bitrise.code-sign-test.watchkitapp.watchkitextension</key>
              <string>BitriseBot-Wildcard</string>
            </dict>
            <key>signingCertificate</key>
            <string>iPhone Developer: Dev Portal Bot Bitrise (E89JV3W9K4)</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>teamID</key>
            <string>72SA8V3WYL</string>
            <key>thinning</key>
            <string>&lt;none&gt;</string>
          </dict>
      </plist>

workflows:
  test_auto_codesign_override:
    description: Test automatic codesign with API key and overriding connection params via step inputs
    before_run:
    - _setup
    steps:
    - script:
        title: Unset Bitrise API connection env vars
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            envman add --key BITRISE_BUILD_URL_BACKUP --value $BITRISE_BUILD_URL
            envman add --key BITRISE_BUILD_API_TOKEN_BACKUP --value $BITRISE_BUILD_API_TOKEN
            envman unset --key BITRISE_BUILD_URL
            envman unset --key BITRISE_BUILD_API_TOKEN
    - path::./:
        title: Step Test - Multi Target API Key auto signing
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta-managed.xcarchive
        - product: app
        - automatic_code_signing: api-key
        - verbose_log: "yes"
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
        - api_key_path: $BITFALL_APPSTORECONNECT_API_KEY_URL
        - api_key_id: $BITFALL_APPSTORECONNECT_API_KEY_ID
        - api_key_issuer_id: $BITFALL_APPSTORECONNECT_API_KEY_ISSUER_ID
    - script:
        title: Restore Bitrise API connection env vars
        inputs:
        - content: |-
            set -ex
            envman add --key BITRISE_BUILD_URL --value $BITRISE_BUILD_URL_BACKUP
            envman add --key BITRISE_BUILD_API_TOKEN --value $BITRISE_BUILD_API_TOKEN_BACKUP

  test_single_certificate_no_passphrase:
    before_run:
    - _setup
    steps:
    - path::./:
        title: Step Test
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta.xcarchive
        - product: app
        - automatic_code_signing: api-key
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_NOPASSPHRASE_URL
        - passphrase_list: ""
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
        - export_development_team: $TEAM_ID

  test_auto_codesign_with_manual_assets:
    before_run:
    - _setup
    steps:
    - certificate-and-profile-installer:
        inputs:
        - certificate_url: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - certificate_passphrase: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - provisioning_profile_url: $BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST
        - install_defaults: "no"
    - path::./:
        title: Step Test - Multi Target API Key auto signing
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta.xcarchive
        - product: app
        - automatic_code_signing: api-key
        - min_profile_validity: 30
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD

  test_auto_codesign:
    before_run:
    - _setup
    - _expose_xcode_version
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -e
            if [[ ${XCODE_MAJOR_VERSION} -lt 13 ]]; then
              echo "This test case requires Xcode >= 13, skipping..."
              exit 0
            fi
            envman add --key XCODE_MAJOR_VERSION_AT_LEAST_13 --value "true"
    - path::./:
        title: Step Test - Multi Target xcodebuild auto signing
        run_if: |-
          {{ enveq "XCODE_MAJOR_VERSION_AT_LEAST_13" "true" }}
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta-managed.xcarchive
        - product: app
        - automatic_code_signing: api-key
        - verbose_log: "yes"
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
    - path::./:
        title: Step Test - Multi Target API Key auto signing
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta.xcarchive
        - product: app-clip
        - automatic_code_signing: api-key
        - min_profile_validity: 30
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
    - path::./:
        title: Step Test - TV OS Apple ID auto signing
        inputs:
        - distribution_method: development
        - archive_path: ./archives/TVOS.xcarchive
        - min_profile_validity: 30
        - automatic_code_signing: apple-id
        - certificate_url_list: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - passphrase_list: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - export_development_team: $TEAM_ID
        - keychain_path: $BITRISE_KEYCHAIN_PATH
        - keychain_password: $BITRISE_KEYCHAIN_PASSWORD

  test_ipa_exports:
    before_run:
    - _setup
    steps:
    - certificate-and-profile-installer:
        inputs:
        - certificate_url: $BITFALL_APPLE_IOS_CERTIFICATE_URL_LIST
        - certificate_passphrase: $BITFALL_APPLE_IOS_CERTIFICATE_PASSPHRASE_LIST
        - provisioning_profile_url: $BITFALL_APPLE_PROVISIONING_PROFILE_URL_LIST
        - install_defaults: "no"
    - path::./:
        title: Step Test - iOS archive
        inputs:
        - distribution_method: development
        - archive_path: ./archives/ios.xcarchive
    - path::./:
        title: Step Test - Custom plist
        inputs:
        - distribution_method: development
        - archive_path: ./archives/ios.xcarchive
        - custom_export_options_plist_content: $CUSTOM_PLIST
    - path::./:
        title: Step Test - TV OS
        inputs:
        - distribution_method: development
        - archive_path: ./archives/TVOS.xcarchive
    - path::./:
        title: Step Test - App Clip
        inputs:
        - distribution_method: development
        - archive_path: ./archives/Fruta.xcarchive
        - product: app-clip

  _setup:
    steps:
    - script:
        title: Remove provisioning profiles from previous runs
        run_if: .IsCI
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf ~/Library/MobileDevice/Provisioning Profiles
    - script:
        title: Clean _tmp dir
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf "./_tmp"
    - change-workdir:
        title: Switch working dir to _tmp
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git@master:
        title: Clone sample app
        inputs:
        - repository_url: $SAMPLE_ARTIFACTS_URL
        - clone_into_dir: .
        - branch: $SAMPLE_ARTIFACTS_BRANCH

  _expose_xcode_version:
    steps:
    - script:
        title: Expose Xcode major version
        inputs:
        - content: |-
            #!/bin/env bash
            set -e
            if [[ ! -z "$XCODE_MAJOR_VERSION" ]]; then
              echo "Xcode major version already exposed: $XCODE_MAJOR_VERSION"
              exit 0
            fi
            version=`xcodebuild -version`
            regex="Xcode ([0-9]*)."
            if [[ ! $version =~ $regex ]]; then
              echo "Failed to determine Xcode major version"
              exit 1
            fi
            xcode_major_version=${BASH_REMATCH[1]}
            echo "Xcode major version: $xcode_major_version"
            envman add --key XCODE_MAJOR_VERSION --value $xcode_major_version
